// Advanced Zeno Language Test File
import {println} from "std/fmt"

fn add(a: int, b: int): int {
    return a + b
}

fn greet(name: string): string {
    return "Hello, " + name
}

fn isPositive(num: int): bool {
    return num > 0
}

fn main() {
    // Test explicit type annotations
    let x: int = 42
    let message: string = "Zeno Language"
    let active: bool = true
    
    // Test type inference
    let result = add(10, 20)
    let greeting = greet("World")
     let check = isPositive(x)

    
    // Test function calls
    println("Result: ", result)
    println("Greeting: ", greeting)
    println("Is positive: ", check)
    
    // Test arrays
    let numbers = [1, 2, 3, 4, 5]
    for num in numbers {
        let doubled = num * 2
        println("Doubled: ", doubled)
    }
    
    // Test conditionals
    if active {
        println("System is active")
        
        if x > 0 {
            println("X is positive")
        } else {
            println("X is not positive")
        }
    }
}
