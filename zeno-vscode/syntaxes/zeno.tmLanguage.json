{
    "scopeName": "source.zeno",
    "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#operators" },
        { "include": "#punctuation" },
        { "include": "#types" },
        { "include": "#functions" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.zeno",
                    "match": "//.*"
                },
                {
                    "name": "comment.block.zeno",
                    "begin": "/\*",
                    "end": "\*/",
                    "captures": {
                        "0": { "name": "punctuation.definition.comment.zeno" }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.zeno",
                    "match": "\b(if|else|return|while|loop|for|break|continue)\b"
                },
                {
                    "name": "storage.type.function.zeno",
                    "match": "\b(fn|pub)\b"
                },
                {
                    "name": "keyword.declaration.zeno",
                    "match": "\b(let)\b"
                },
                {
                    "name": "keyword.module.zeno",
                    "match": "\b(import|from)\b"
                },
                {
                    "name": "constant.language.boolean.zeno",
                    "match": "\b(true|false)\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.zeno",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.zeno",
                    "match": "\\\\(n|t|r|\\\\|\"|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{2})"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.float.zeno",
                    "match": "\b[0-9]+\.[0-9]+\b"
                },
                {
                    "name": "constant.numeric.integer.zeno",
                    "match": "\b[0-9]+\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.zeno",
                    "match": "(\+|\-|\*|\/|%)"
                },
                {
                    "name": "keyword.operator.comparison.zeno",
                    "match": "(==|!=|<=|>=|<|>)"
                },
                {
                    "name": "keyword.operator.logical.zeno",
                    "match": "(&&|\|\||!)"
                },
                {
                    "name": "keyword.operator.assignment.zeno",
                    "match": "="
                }
            ]
        },
        "punctuation": {
             "patterns": [
                {
                    "name": "punctuation.separator.comma.zeno",
                    "match": ","
                },
                {
                    "name": "punctuation.accessor.zeno",
                    "match": "\."
                },
                 {
                    "name": "punctuation.definition.type.annotation.zeno",
                    "match": ":"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.built-in.zeno",
                    "match": "\b(int|string|bool|float)\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.zeno",
                    "match": "\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\s*\()"
                }
            ]
        }
    }
}
